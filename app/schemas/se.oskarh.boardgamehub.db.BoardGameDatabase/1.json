{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "16fc44b611fe3f991d2edc6276dfa6db",
    "entities": [
      {
        "tableName": "boardgame_table",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `names` TEXT NOT NULL, `type` INTEGER NOT NULL, `yearPublished` INTEGER NOT NULL, `isShown` INTEGER NOT NULL, `description` TEXT, `imageUrl` TEXT, `thumbnailUrl` TEXT, `minPlayers` INTEGER, `maxPlayers` INTEGER, `minAge` INTEGER, `playingTime` INTEGER, `minPlayTime` INTEGER, `maxPlayTime` INTEGER, `statistics` TEXT, `videos` TEXT NOT NULL, `comments` TEXT NOT NULL, `links` TEXT NOT NULL, `polls` TEXT NOT NULL, `normalizedName` TEXT NOT NULL, `lastViewedTimestamp` INTEGER NOT NULL, `created` INTEGER NOT NULL, `lastSync` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "names",
            "columnName": "names",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "yearPublished",
            "columnName": "yearPublished",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isShown",
            "columnName": "isShown",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "imageUrl",
            "columnName": "imageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "thumbnailUrl",
            "columnName": "thumbnailUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "minPlayers",
            "columnName": "minPlayers",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "maxPlayers",
            "columnName": "maxPlayers",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "minAge",
            "columnName": "minAge",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "playingTime",
            "columnName": "playingTime",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "minPlayTime",
            "columnName": "minPlayTime",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "maxPlayTime",
            "columnName": "maxPlayTime",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "statistics",
            "columnName": "statistics",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "videos",
            "columnName": "videos",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "comments",
            "columnName": "comments",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "links",
            "columnName": "links",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "polls",
            "columnName": "polls",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "normalizedName",
            "columnName": "normalizedName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastViewedTimestamp",
            "columnName": "lastViewedTimestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "created",
            "columnName": "created",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastSync",
            "columnName": "lastSync",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_boardgame_table_id",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_boardgame_table_id` ON `${TABLE_NAME}` (`id`)"
          },
          {
            "name": "index_boardgame_table_lastViewedTimestamp",
            "unique": false,
            "columnNames": [
              "lastViewedTimestamp"
            ],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_boardgame_table_lastViewedTimestamp` ON `${TABLE_NAME}` (`lastViewedTimestamp`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "ftsVersion": "FTS4",
        "ftsOptions": {
          "tokenizer": "simple",
          "tokenizerArgs": [],
          "contentTable": "boardgame_table",
          "languageIdColumnName": "",
          "matchInfo": "FTS4",
          "notIndexedColumns": [],
          "prefixSizes": [],
          "preferredOrder": "ASC"
        },
        "contentSyncTriggers": [
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_boardgame_table_fts_BEFORE_UPDATE BEFORE UPDATE ON `boardgame_table` BEGIN DELETE FROM `boardgame_table_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_boardgame_table_fts_BEFORE_DELETE BEFORE DELETE ON `boardgame_table` BEGIN DELETE FROM `boardgame_table_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_boardgame_table_fts_AFTER_UPDATE AFTER UPDATE ON `boardgame_table` BEGIN INSERT INTO `boardgame_table_fts`(`docid`, `normalizedName`) VALUES (NEW.`rowid`, NEW.`normalizedName`); END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_boardgame_table_fts_AFTER_INSERT AFTER INSERT ON `boardgame_table` BEGIN INSERT INTO `boardgame_table_fts`(`docid`, `normalizedName`) VALUES (NEW.`rowid`, NEW.`normalizedName`); END"
        ],
        "tableName": "boardgame_table_fts",
        "createSql": "CREATE VIRTUAL TABLE IF NOT EXISTS `${TABLE_NAME}` USING FTS4(`normalizedName` TEXT NOT NULL, content=`boardgame_table`)",
        "fields": [
          {
            "fieldPath": "normalizedName",
            "columnName": "normalizedName",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "boardgame_property_table",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT NOT NULL, `description` TEXT NOT NULL, `propertyType` INTEGER NOT NULL, `created` INTEGER NOT NULL, PRIMARY KEY(`id`, `propertyType`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "propertyType",
            "columnName": "propertyType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "created",
            "columnName": "created",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id",
            "propertyType"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "favorite_table",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `favoriteType` INTEGER NOT NULL, `favoriteStatus` INTEGER NOT NULL, `created` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "favoriteType",
            "columnName": "favoriteType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "favoriteStatus",
            "columnName": "favoriteStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "created",
            "columnName": "created",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "boardgame_collection_table",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user` TEXT NOT NULL, `publicationDate` TEXT NOT NULL, `boardGames` TEXT NOT NULL, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `created` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "user",
            "columnName": "user",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "publicationDate",
            "columnName": "publicationDate",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "boardGames",
            "columnName": "boardGames",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "created",
            "columnName": "created",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "suggestion_table",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`original_suggestion` TEXT NOT NULL, `formattedSuggestion` TEXT NOT NULL, `created` INTEGER NOT NULL, PRIMARY KEY(`formattedSuggestion`))",
        "fields": [
          {
            "fieldPath": "originalSuggestion",
            "columnName": "original_suggestion",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "formattedSuggestion",
            "columnName": "formattedSuggestion",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "created",
            "columnName": "created",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "formattedSuggestion"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '16fc44b611fe3f991d2edc6276dfa6db')"
    ]
  }
}